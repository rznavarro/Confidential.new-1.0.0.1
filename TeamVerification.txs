import React, { useState } from 'react';
import { Shield, ArrowLeft } from 'lucide-react';
import { Card, Button } from '../ui/Card';
import { Team } from '../../types';

interface TeamVerificationProps {
  team: Team;
  onVerify: (code: string) => boolean;
  onGoBack: () => void;
}

export const TeamVerification: React.FC<TeamVerificationProps> = ({ 
  team, 
  onVerify, 
  onGoBack 
}) => {
  const [teamCode, setTeamCode] = useState('');
  const [error, setError] = useState('');
  const [isLoading, setIsLoading] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError('');
    setIsLoading(true);

    await new Promise(resolve => setTimeout(resolve, 600));

    const success = onVerify(teamCode);
    if (!success) {
      setError('C贸digo de equipo incorrecto. Contacta a tu supervisor.');
    }

    setIsLoading(false);
  };

  return (
    <div className="min-h-screen flex items-center justify-center p-4">
      <div className="w-full max-w-md">
        <div className="text-center mb-8">
          <div 
            className="w-16 h-16 mx-auto mb-4 rounded-full flex items-center justify-center text-3xl"
            style={{ backgroundColor: `${team.color}20`, border: `2px solid ${team.color}` }}
          >
            {team.icon}
          </div>
          <h1 className="text-3xl font-bold text-white mb-2">
            Verificaci贸n de equipo
          </h1>
          <h2 className="text-xl text-cyan-400 font-semibold mb-2">
            {team.name}
          </h2>
          <p className="text-slate-400">
            Supervisor: {team.supervisor}
          </p>
        </div>

        <Card className="space-y-6">
          <form onSubmit={handleSubmit} className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-slate-300 mb-2">
                C贸digo de equipo
              </label>
              <div className="relative">
                <Shield className="absolute left-3 top-3 h-5 w-5 text-slate-400" />
                <input
                  type="text"
                  value={teamCode}
                  onChange={(e) => setTeamCode(e.target.value.toUpperCase())}
                  placeholder="Ingresa el c贸digo del equipo"
                  className="w-full pl-10 pr-4 py-3 bg-slate-700/50 border border-slate-600 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:border-transparent"
                  required
                />
              </div>
            </div>

            {error && (
              <div className="p-3 bg-red-500/20 border border-red-500/50 rounded-lg">
                <p className="text-red-400 text-sm">{error}</p>
              </div>
            )}

            <Button
              type="submit"
              size="lg"
              disabled={isLoading || !teamCode}
              className="w-full"
            >
              {isLoading ? (
                <>
                  <div className="w-5 h-5 border-2 border-white/30 border-t-white rounded-full animate-spin" />
                  Verificando...
                </>
              ) : (
                'Acceder al sistema'
              )}
            </Button>
          </form>

          <button
            onClick={onGoBack}
            className="w-full flex items-center justify-center gap-2 text-slate-400 hover:text-cyan-400 transition-colors"
          >
            <ArrowLeft className="w-4 h-4" />
            Seleccionar otro equipo
          </button>
        </Card>
      </div>
    </div>
  );
};
